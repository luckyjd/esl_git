<?php
/*
 * @author leehld
 */

/**
 * Prevent loading this file directly
 */
defined( 'ABSPATH' ) || exit;

if ( !class_exists( 'LP_Students_List_Shortcode' ) ) {

	if ( class_exists( 'LP_Shortcodes' ) ) {

		class LP_Students_List_Shortcode extends LP_Shortcodes {


			public static function init() {
				parent::init(); // TODO: Change the autogenerated stub
				$shortcodes = array(
					'learn_press_students_list' => __CLASS__ . '::students_list'
				);


				foreach ( $shortcodes as $shortcode => $function ) {
					add_shortcode( apply_filters( "{$shortcode}_shortcode_tag", $shortcode ), $function );
				}
			}

			public static function students_list( $atts ) {

				$atts = shortcode_atts(
					array(
						'title'     => '',
						'course_id' => '',
						'limit'     => '',
						'filter'    => ''
					), $atts
				);

				$output = '';

				if ( $atts['title'] ) { ?>
                    <h3 class="students-list-title"><?php echo esc_html( $atts['title'] ); ?></h3>
				<?php }

				if ( !$atts['course_id'] ) {
					$output = __( 'Please enter Course ID.', 'learnpress' );
				} else {
					$course = LP_Course::get_course( $atts['course_id'] );
					if ( !$course ) {
						$output = __( 'Course ID invalid, please check it again.', 'learnpress' );
					} else {
						$student_limit = $atts['limit'] ? ( $atts['limit'] > 0 ? $atts['limit'] : '-1' ) : '-1';
						$filter        = $atts['filter'] ? $atts['filter'] : 'all';

						learn_press_get_template(
							'list-students.php',
							array(
								'course' => $course,
								'limit'  => $student_limit,
								'filter' => $filter
							),
							learn_press_template_path() . '/addons/students-list/',
							LP_ADDON_STUDENTS_LIST_TEMPLATE
						);
					}
				}

				return self::wrapper_shortcode( $output );
			}

		}

		LP_Students_List_Shortcode::init();

	} else {

		return;

	}
}